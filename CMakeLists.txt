CMAKE_MINIMUM_REQUIRED (VERSION 3.9 FATAL_ERROR)

SET (VERSION_SHORT "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
SET (VERSION_FULL "${VERSION_SHORT}-${VERSION_TWEAK}")
SET (GENERIC_LIB_VERSION ${VERSION_SHORT})
STRING (SUBSTRING ${VERSION_SHORT} 0 1 GENERIC_LIB_SOVERSION)

IF (NOT DEFINED PROJECT_NAME)
	# Atribui o nome do diretório à variável ${PROJECT_NAME}, esta variável
	# é criada pala macro PROJECT().
	GET_FILENAME_COMPONENT (PROJECT_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)
	SET (PROJECT_NAME ${PROJECT_NAME} CACHE STRING "Default project name")
	MESSAGE (WARNING "PROJECT_NAME not defined, using root directory as default name.")
ENDIF()

PROJECT (${PROJECT_NAME} VERSION ${VERSION_SHORT} LANGUAGES C CXX)

IF (EXISTS "${CMAKE_SOURCE_DIR}/Dependencies.cmake")
	MESSAGE (STATUS "${CMAKE_SOURCE_DIR}/Dependencies.cmake found")
	INCLUDE (Dependencies.cmake)
ENDIF()

#INCLUDE (ProjectBuildType.cmake)
ADD_LIBRARY (${PROJECT_NAME} INTERFACE)

TARGET_LINK_LIBRARIES (${PROJECT_NAME} ${EXTERNAL_LIBS})

TARGET_INCLUDE_DIRECTORIES (${PROJECT_NAME}
	#	PUBLIC
	#		$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
	#		$<INSTALL_INTERFACE:include>
	#	PRIVATE
	#		src)
	INTERFACE $<INSTALL_INTERFACE:include>)

#TARGET_COMPILE_FEATURES (${PROJECT_NAME}
#	PUBLIC
#	PRIVATE )

INSTALL (
	TARGETS ${PROJECT_NAME}
	EXPORT ${PROJECT_NAME}Config
	# RUNTIME refers to the runtime piece of the target. Runtime piece only applies to executable targets and DLL (Windows) style shared libraries
	RUNTIME DESTINATION bin
	# LIBRARY refers to all the other (non DLL) shared libraries and modules.
	LIBRARY DESTINATION lib
	# ARCHIVE refers to the static libraries and the import parts of DLL libraries (LIB files).
	ARCHIVE DESTINATION lib)

INSTALL (DIRECTORY include/ DESTINATION include)

INSTALL (
	EXPORT ${PROJECT_NAME}Config
	FILE "${PROJECT_NAME}Config.cmake"
	DESTINATION share/${PROJECT_NAME}-${VERSION_SHORT}/cmake)

IF(EXISTS ${CMAKE_SOURCE_DIR}/test)
	ENABLE_TESTING()
	INCLUDE (CTest)
ENDIF()

INCLUDE (CPack)
