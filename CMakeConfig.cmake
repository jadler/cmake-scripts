GET_TARGET_PROPERTY (LIBRARIES ${PROJECT_NAME} LIBRARIES)
SET (PROJECT_DEPENDENCIES "")
IF (NOT "${LIBRARIES}" STREQUAL "LIBRARIES-NOTFOUND")
	SET (PROJECT_DEPENDENCIES "INCLUDE (CMakeFindDependencyMacro)\n")

	FOREACH (DEP ${LIBRARIES})
		SET (PROJECT_DEPENDENCIES "${PROJECT_DEPENDENCIES}\nFIND_DEPENDENCY (${DEP} REQUIRED)\n")
	ENDFOREACH()

	GET_PROPERTY (PARENT DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY PARENT_DIRECTORY)
	IF ("${PARENT}" STREQUAL "")
		FOREACH (DEP ${LIBRARIES})
			FIND_PACKAGE (${DEP} REQUIRED)
			TARGET_LINK_LIBRARIES (${PROJECT_NAME} PUBLIC ${DEP}::${DEP})
		ENDFOREACH()
	ELSE()
		TARGET_LINK_LIBRARIES (${PROJECT_NAME} ${LIBRARIES})
	ENDIF()
ENDIF()

GET_TARGET_PROPERTY (_TYPE ${PROJECT_NAME} TYPE)
IF ("${_TYPE}" STREQUAL "INTERFACE_LIBRARY")
	TARGET_INCLUDE_DIRECTORIES (${PROJECT_NAME}
		INTERFACE $<INSTALL_INTERFACE:include>)
ELSE ()
	LINK_DIRECTORIES (${CMAKE_BINARY_DIR})

	TARGET_INCLUDE_DIRECTORIES (${PROJECT_NAME}
		PUBLIC
			$<INSTALL_INTERFACE:include>
			$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
		PRIVATE
			${CMAKE_CURRENT_SOURCE_DIR}/src)

	FILE (GLOB _SOURCES
		"${CMAKE_CURRENT_SOURCE_DIR}/src/*.c*")
	FILE (GLOB_RECURSE _PLATFORM_SPECIFIC_SOURCES
		"${CMAKE_CURRENT_SOURCE_DIR}/src/${CMAKE_SYSTEM_NAME}/*.c*")
	TARGET_SOURCES (${PROJECT_NAME} PRIVATE ${_SOURCES} ${_PLATFORM_SPECIFIC_SOURCES})
ENDIF ()

IF (NOT "${_TYPE}" STREQUAL "EXECUTABLE")
	# Cria um arquivo básico com a versão
	INCLUDE (CMakePackageConfigHelpers)
	WRITE_BASIC_PACKAGE_VERSION_FILE (
		"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
		COMPATIBILITY SameMajorVersion)

	# Cria o arquivo <project>Config.cmake para ser usado com o FIND_PACKAGE
	CONFIGURE_FILE (
		"${CMAKE_CURRENT_LIST_DIR}/Config.cmake.in"
		"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
		@ONLY)
	UNSET (PROJECT_DEPENDENCIES)
	UNSET (LIBRARIES)

	INSTALL (FILES
		"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
		"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
		DESTINATION lib/cmake/${PROJECT_NAME})

	INSTALL (EXPORT ${PROJECT_NAME}Targets
		FILE ${PROJECT_NAME}Targets.cmake
		NAMESPACE ${PROJECT_NAME}::
		DESTINATION lib/cmake/${PROJECT_NAME})
ENDIF()

INSTALL (TARGETS ${PROJECT_NAME}
	EXPORT ${PROJECT_NAME}Targets
	LIBRARY DESTINATION lib COMPONENT libraries
	ARCHIVE DESTINATION lib COMPONENT libraries
	RUNTIME DESTINATION bin COMPONENT runtime)

IF (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/include)
	INSTALL (DIRECTORY include/
		DESTINATION include
		COMPONENT development)
ENDIF()

FILE (COPY ${CMAKE_CURRENT_LIST_DIR}/CMakeGraphVizOptions.cmake
	DESTINATION ${CMAKE_BINARY_DIR})

OPTION (BUILD_TESTS "Building tests for ${PROJECT_NAME} project" ON)
IF (BUILD_TESTS AND EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/test)
	INCLUDE (CTestConfig)
ENDIF ()

IF (NOT "${CPACK_GENERATOR}" STREQUAL "")
	INCLUDE (CPackConfig)
ENDIF()
