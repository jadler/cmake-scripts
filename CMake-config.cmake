GET_TARGET_PROPERTY (_TYPE ${PROJECT_NAME} TYPE)
IF ("${_TYPE}" STREQUAL "INTERFACE_LIBRARY")
	TARGET_INCLUDE_DIRECTORIES (${PROJECT_NAME}
		INTERFACE $<INSTALL_INTERFACE:include>)
ELSE ()
	GET_TARGET_PROPERTY (LIBRARIES ${PROJECT_NAME} INTERFACE_LINK_LIBRARIES)
	IF (NOT "${LIBRARIES}" MATCHES ".*-NOTFOUND")
		SET (PROJECT_DEPENDENCIES "INCLUDE (CMakeFindDependencyMacro)\n")
		FOREACH (_LIB ${LIBRARIES})
			STRING (REGEX REPLACE ".*::" "" _LIB ${_LIB})
			STRING (REGEX REPLACE ">$" "" _LIB ${_LIB})
			SET (PROJECT_DEPENDENCIES "${PROJECT_DEPENDENCIES}\nFIND_DEPENDENCIES (${_LIB} REQUIRED)")
		ENDFOREACH()
	ENDIF()
	LINK_DIRECTORIES (${CMAKE_BINARY_DIR})

	TARGET_INCLUDE_DIRECTORIES (${PROJECT_NAME}
		PUBLIC
		$<INSTALL_INTERFACE:include>
		$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
		PRIVATE
		${CMAKE_CURRENT_SOURCE_DIR}/src)

	AUX_SOURCE_DIRECTORY (${CMAKE_CURRENT_SOURCE_DIR}/src _SOURCES)
	TARGET_SOURCES (${PROJECT_NAME} PRIVATE ${_SOURCES})
ENDIF ()

IF (NOT "${_TYPE}" STREQUAL "EXECUTABLE")
	# Cria um arquivo básico com a versão
	INCLUDE (CMakePackageConfigHelpers)
	WRITE_BASIC_PACKAGE_VERSION_FILE (
		"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
		COMPATIBILITY SameMajorVersion)

	# Cria o arquivo <project>Config.cmake para ser usado com o FIND_PACKAGE
	CONFIGURE_FILE (
		"${CMAKE_CURRENT_LIST_DIR}/Config.cmake.in"
		"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
		@ONLY)
	UNSET (PROJECT_DEPENDENCIES)
	UNSET (LIBRARIES)

	INSTALL (FILES
		"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
		"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
		DESTINATION lib/cmake/${PROJECT_NAME})

	SET (NAMESPACE "${PROJECT_NAME}")
	GET_TARGET_PROPERTY (NSPACE ${PROJECT_NAME} NAMESPACE)
	IF (NOT "${NSPACE}" MATCHES ".*-NOTFOUND")
		SET (NAMESPACE "${NSPACE}")
	ENDIF()
	INSTALL (EXPORT ${PROJECT_NAME}Targets
		FILE ${PROJECT_NAME}Targets.cmake
		NAMESPACE ${NAMESPACE}::
		DESTINATION lib/cmake/${PROJECT_NAME})
ENDIF()

INSTALL (TARGETS ${PROJECT_NAME}
	EXPORT ${PROJECT_NAME}Targets
	LIBRARY DESTINATION lib COMPONENT libraries
	ARCHIVE DESTINATION lib COMPONENT libraries
	RUNTIME DESTINATION bin COMPONENT runtime)

IF (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/include)
	INSTALL (DIRECTORY include/
		DESTINATION include
		COMPONENT development)
ENDIF()

FILE (COPY ${CMAKE_CURRENT_LIST_DIR}/CMakeGraphVizOptions.cmake
	DESTINATION ${CMAKE_BINARY_DIR})

IF (NOT "${CPACK_GENERATOR}" STREQUAL "")
	INCLUDE (CPack-config)
ENDIF()
